plugins {
    id 'org.asciidoctor.convert' version '1.5.3'
    id 'org.springframework.boot' version '2.1.4.RELEASE'
    id 'java'
}

group = 'com.foodie'
version = '0.0.1-SNAPSHOT'

repositories {
    mavenCentral()
}

apply plugin: 'io.spring.dependency-management'

ext {
    set('springCloudVersion', 'Greenwich.SR1')
    shiroVersion = '1.4.1'
    log4jdbcVersion = '1.16'
}





configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

dependencies {
    //springboot
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation("org.springframework.boot:spring-boot-starter-mail")

    implementation('io.springfox:springfox-swagger2:2.9.2')
    implementation('io.springfox:springfox-swagger-ui:2.9.2')
    implementation 'org.flywaydb:flyway-core'
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'

//    implementation 'org.springframework.session:spring-session-core'

    implementation "com.cuisongliu:kaptcha-spring-boot-starter:1+"
    implementation("com.github.ulisesbocchio:jasypt-spring-boot-starter:2.1.2")
    implementation ("org.apache.shiro:shiro-spring-boot-web-starter:$shiroVersion")


    implementation("mysql:mysql-connector-java:8.0.15")
    runtimeOnly 'com.h2database:h2'
    implementation('com.alibaba:druid-spring-boot-starter:1.1.10')

    implementation('com.paypal.sdk:rest-api-sdk:1.14.0')

     //监控sql日志
    compile("org.bgee.log4jdbc-log4j2:log4jdbc-log4j2-jdbc4.1:${log4jdbcVersion}")
    //工具包
    implementation('cn.hutool:hutool-all:4.6.2')
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    compileOnly "org.mapstruct:mapstruct:1.3.0.Final"
    annotationProcessor "org.mapstruct:mapstruct-processor:1.3.0.Final"

    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    implementation 'com.github.jsonzou:jmockdata:4.1.2'

}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

sourceSets {
    componentTest {
        compileClasspath += sourceSets.main.output + sourceSets.test.output
        runtimeClasspath += sourceSets.main.output + sourceSets.test.output
    }

}

configurations {
    componentTestImplementation.extendsFrom testImplementation
    componentTestRuntimeOnly.extendsFrom testRuntimeOnly
}

task componentTest(type: Test) {
    description = 'Run component tests.'
    group = 'verification'
    testClassesDirs = sourceSets.componentTest.output.classesDirs
    classpath = sourceSets.componentTest.runtimeClasspath
    shouldRunAfter test
}

apply from: "${rootProject.projectDir}/gradle/idea.gradle"




